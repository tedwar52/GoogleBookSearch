{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/Grid/index.js","components/BookList/index.js","pages/saved.js","components/Form/index.js","utils/API.js","pages/search.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","href","Jumbotron","children","style","height","clear","paddingTop","textAlign","Container","fluid","Row","Col","size","split","map","join","BookList","BookListItem","title","author","description","SavedBooks","books","useState","useEffect","key","Form","Input","props","placeholder","type","SearchBtn","onClick","axios","get","SearchBooks","setBooks","bookSearch","setBookSearch","API","then","res","data","catch","err","console","log","name","value","onChange","event","target","length","book","_id","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f723dc4d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\">\r\n        Google Books Search\r\n      </a>\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n          Search\r\n      </a>\r\n      <a className=\"navbar-brand\" href=\"/saved\">\r\n          Saved\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//add href=\"/\" to <a> for links\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport function BookList({ children }) {\r\n    return <ul className=\"list-group\">{children}</ul>;\r\n}\r\n\r\nexport function BookListItem({\r\n    title,\r\n    author,\r\n    description\r\n}) {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <h3>{title}</h3>\r\n            <h6>{author}</h6>\r\n            <p>{description}</p>\r\n        </li>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Nav from \"../components/Nav\";\r\nimport Jumbotron from \"../components/Jumbotron\"\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { BookList, BookListItem } from \"../components/BookList\";\r\n\r\nfunction SavedBooks() {\r\n\r\n    const books = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, []);\r\n\r\n    function loadBooks() {\r\n\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-6 sm-12\">\r\n                    <Jumbotron />\r\n                        <h1>My Saved Books</h1>\r\n                    <BookList>\r\n                        <BookListItem\r\n                            key={books.title}\r\n                            title={books.title}\r\n                            author={books.author}\r\n                            description={books.description}\r\n                        />\r\n                    </BookList>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n  }\r\n\r\n  export default SavedBooks;","import React from \"react\";\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\n/*\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n*/\r\n\r\n\r\n//====FORM======\r\n\r\n//Header for Form\r\nexport function Form ({ children }) {\r\n  return <div className=\"my-5\">\r\n    <h1>Book Search:</h1>\r\n    <div className=\"input-group\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n//Input field\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"input-group input-group-lg\" placeholder=\"Lord of the Flies\">\r\n      <input className=\"form-control\" type=\"text\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//Search Button\r\nexport function SearchBtn({ type = \"default\", className, children, onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n      {children}\r\n    </button>\r\n  );\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { BookList, BookListItem } from \"../components/BookList\";\r\nimport { Form, Input, SearchBtn } from \"../components/Form\";\r\nimport API from \"../utils/API\";\r\nimport apiSearch from \"../utils/googlebook\";\r\n\r\nfunction SearchBooks() {\r\n  const [books, setBooks] = useState([]);\r\n  const [bookSearch, setBookSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadBooks();\r\n  }, []);\r\n\r\n  \r\n\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then((res) => setBooks(res.data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { value } = event.target;\r\n    setBookSearch(value);\r\n  }\r\n\r\n  function handleSearch() {\r\n    SearchBooks(bookSearch)\r\n  }\r\n\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    API.saveBook(bookSearch)\r\n      .then((res) => setBooks(res.data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-6 sm-12\">\r\n          <Jumbotron />\r\n          <Form>\r\n            <Input name=\"BookSearch\" value={bookSearch} onChange={handleInputChange} />\r\n            <SearchBtn onClick={handleSearch}>Search</SearchBtn>\r\n          </Form>\r\n        </Col>\r\n        <Col size=\"md-6 sm-12\">\r\n          <Jumbotron>\r\n            <h1>Results</h1>\r\n          </Jumbotron>\r\n          {books.length} ? (\r\n          <BookList>\r\n            {books.map((book) => (\r\n              <BookListItem key={book._id}>\r\n                <Link>\r\n                  <strong>{book.title}</strong>\r\n                </Link>\r\n                <h3>{book.author}</h3>\r\n                <h3>{book.description}</h3>\r\n              </BookListItem>\r\n            ))}\r\n          </BookList>\r\n          ) : (<h3>No Results to Display</h3>)\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default SearchBooks;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Nav from \"./components/Nav\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport SavedBooks from \"./pages/saved\";\r\nimport SearchBooks from \"./pages/search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Jumbotron>\r\n            <h1>(React) Google Books Search</h1>\r\n            <h5>Search for and Save Books of Interest</h5>\r\n          </Jumbotron>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SearchBooks} />\r\n          <Route exact path=\"/save\" component={SavedBooks} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}